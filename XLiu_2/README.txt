This code is built upon the answer code from TA ben Kane. Hypothesize3 generates all the possible subjects with their related subset facts, then output the hypotheses regarding each subject with its related subset facts.

For the example provided by the Professor: the subject is Rover1 and its related facts are: (Dog.n Rover1), (Has-part.v Rover1 Ear1), (Ear.n Ear1), (Has-part.v Rover1 Ear2), (Ear.n Ear2), this algorithm will generate two functions for Ear1 and Ear2, namely Ear.f and Ear2.f. Similarly, for all multiple functions generated, the name of the first function doesn't have 1 at the end.

This method greatly improves from the method of last homework as it can deal with objects of same types that have the same relationship with subject and generalizes better to the knowledge where the subject is not the first argument in the binary relationship. It is promising because we can further improve the accuracies of those confidence scores by inputting more evidence. However, it still has limitations. For example, it cannot give different confidence scores based on the characteristics of relationship we "see" as human do, such as color predicate of an animal is less generalizable but has part predicate of an animal is more generalizable. The constraints that there is at most one type predicate for each constant limits the ability to learn more knowledge about the type of objects we could have learned as a human. Also, it can only make hypotheses based on the relationship we notice and input as fact, instead of finding some pattern that humans did not notice before from knowledge data as neural networks.